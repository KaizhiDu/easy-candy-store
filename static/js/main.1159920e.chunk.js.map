{"version":3,"sources":["App.js","index.js"],"names":["App","useState","candies","setCandies","name","price","number","newCandy","setNewCandy","useEffect","fetch","then","res","json","data","handleChange","e","target","value","onSubmit","preventDefault","console","log","method","headers","body","JSON","stringify","r","reset","TextField","label","onChange","Button","type","variant","color","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","map","candy","key","id","ReactDOM","render","document","getElementById"],"mappings":"wRA6FeA,EAzFH,WAAO,IAAD,EAEcC,mBAAS,IAFvB,mBAETC,EAFS,KAEAC,EAFA,OAGgBF,mBAAS,CACvCG,KAAM,GACNC,MAAO,GACPC,OAAQ,KANM,mBAGTC,EAHS,KAGCC,EAHD,KAShBC,qBAAU,WACRC,MAAM,oEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAWW,QAEd,CAACZ,IAEJ,IAAMa,EAAe,SAAAC,GACnBR,EAAY,eACPD,EADM,eAERS,EAAEC,OAAOb,KAAOY,EAAEC,OAAOC,UAmB9B,OACE,oCACE,0BAAMC,SAjBW,SAAAH,GACnBA,EAAEI,iBACFC,QAAQC,IAAIf,GACZG,MAAM,mEAAoE,CACxEa,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUpB,KACpBI,MAAK,SAAAiB,GAAC,OAAIA,EAAEf,UAAQF,MAAK,SAAAG,GAC1BO,QAAQC,IAAIR,MAEdE,EAAEC,OAAOY,UAML,kBAACC,EAAA,EAAD,CACEC,MAAM,aACN3B,KAAK,OACL4B,SAAUjB,IAEZ,6BACA,kBAACe,EAAA,EAAD,CACEC,MAAM,QACN3B,KAAK,QACL4B,SAAUjB,IAEZ,6BACA,kBAACe,EAAA,EAAD,CACEC,MAAM,SACN3B,KAAK,SACL4B,SAAUjB,IAEZ,6BAAK,6BACL,kBAACkB,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAAYC,MAAM,WAAhD,QAEF,6BAEA,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,iBAGJ,kBAACC,EAAA,EAAD,KACGzC,EAAQ0C,KAAI,SAAAC,GACX,OAAO,kBAACJ,EAAA,EAAD,CAAUK,IAAKD,EAAME,IAC1B,kBAACL,EAAA,EAAD,KAAYG,EAAMzC,MAClB,kBAACsC,EAAA,EAAD,KAAYG,EAAMxC,OAClB,kBAACqC,EAAA,EAAD,KAAYG,EAAMvC,gBC7EhC0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1159920e.chunk.js","sourcesContent":["//https://6o0tlfjnq6.execute-api.us-west-2.amazonaws.com/dev/candy\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Button, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\n\nconst App = () => {\n\n  const [candies, setCandies] = useState([]);\n  const [newCandy, setNewCandy] = useState({\n    name: '',\n    price: '',\n    number: ''\n  });\n\n  useEffect(() => {\n    fetch('https://6o0tlfjnq6.execute-api.us-west-2.amazonaws.com/dev/candy')\n      .then(res => res.json())\n      .then(data => {\n        setCandies(data);\n      });\n  }, [candies]);\n\n  const handleChange = e => {\n    setNewCandy({\n      ...newCandy,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(newCandy);\n    fetch('https://6o0tlfjnq6.execute-api.us-west-2.amazonaws.com/dev/candy', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCandy)\n    }).then(r => r.json()).then(data => {\n      console.log(data);\n    });\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"candy name\"\n          name=\"name\"\n          onChange={handleChange}\n        />\n        <br/>\n        <TextField\n          label=\"price\"\n          name=\"price\"\n          onChange={handleChange}\n        />\n        <br/>\n        <TextField\n          label=\"number\"\n          name=\"number\"\n          onChange={handleChange}\n        />\n        <br/><br/>\n        <Button type='submit' variant=\"contained\" color=\"primary\">Add</Button>\n      </form>\n      <br/>\n\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Candy Name</TableCell>\n            <TableCell>Price</TableCell>\n            <TableCell>Number</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {candies.map(candy => {\n            return <TableRow key={candy.id}>\n              <TableCell>{candy.name}</TableCell>\n              <TableCell>{candy.price}</TableCell>\n              <TableCell>{candy.number}</TableCell>\n            </TableRow>;\n          })}\n        </TableBody>\n\n      </Table>\n\n\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}